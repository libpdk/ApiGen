{if !isset($isInterface)}{$isInterface = false}{/if}
{if !isset($isClass)}{$isClass = false}{/if}
{var $methods = $entity->getOwnMethods()}
{var $methodSectionCls = !empty($methods) ? "section-item-container class-method-section-container" : "uk-hidden" }

{define methodItemSection}
    <div class="uk-grid-small list-item" uk-grid>
        <div class="uk-width-1-1 uk-text-break tags-container">
            {if $isClass}
                {if $method->isPublic()}
                    <span class="uk-label uk-label-success">public</span>
                {elseif $method->isProtected()}
                    <span class="uk-label uk-label-success">protected</span>
                {elseif $method->isPrivate()}
                    <span class="uk-label uk-label-success">private</span>
                {/if}
            {/if}
            {if $method->hasAnnotation("deprecated") }
                <div class="uk-width-1-1 uk-text-break tags-container">
                    <span class="uk-label uk-label-danger">deprecated</span>
                </div>
            {/if}
        </div>
        <div class="uk-width-1-1 uk-text-break signature">
            <a href="{$method|linkReflection}" target="_blank">
                {if isset($showSimpleName) && $showSimpleName}
                    {$method->getShortName()}
                {else}
                    {$method->getName()}
                {/if}
            </a>
            ({foreach $method->getParameters() as $parameter}
            <span>
            {$parameter->getTypeHint()|buildLinkIfReflectionFound}
            <span class="callable-param-name">{if $parameter->isPassedByReference()}&amp; {/if}${$parameter->getName()}</span>
            {if $parameter->isDefaultValueAvailable()} = {$parameter->getDefaultValue()|dumpDefaultValue|phpHighlight|noescape}{elseif $parameter->isVariadic()},â€¦{/if}</span>{sep}, {/sep}
            {/foreach})
        </div>
        <div class="uk-width-1-1">
            <div class="uk-text-break">
                {*{if $constant instanceof \ApiGen\Reflection\Contract\Reflection\Partial\AnnotationsInterface && $constant->getDescription() != ""}*}
                {*{$constant|description}*}
                {*{elseif $constant->hasAnnotation("var") }*}
                {*{var $varAnnotation = $constant->getAnnotation("var")}*}
                {*{$varAnnotation[0]}*}
                {*{/if}*}
            </div>
        </div>
    </div>
{/define}
<div class="{$methodSectionCls}">
    <h3>Method List</h3>
    {foreach $methods as $method}
        {include methodItemSection, method => $method}
    {/foreach}
    {*{var $inheritConstants = $entity->getInheritedConstants()}*}
    {*{if !empty($inheritConstants)}*}
    {*<ul data-uk-accordion="multiple: true" class="inherits-container">*}
    {*<li class="inherit-item">*}
    {*<div class="uk-accordion-title uk-width-1-1 uk-text-middle uk-text-left">*}
    {*<span class="uk-text-break">*}
    {*view inherit constants*}
    {*</span>*}
    {*</div>*}
    {*<div class="uk-accordion-content">*}
    {*{foreach $inheritConstants as $constant}*}
    {*{include constItemSection, constant => $constant}*}
    {*{/foreach}*}
    {*</div>*}
    {*</li>*}
    {*</ul>*}
    {*{/if}*}
</div>